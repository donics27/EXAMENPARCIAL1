#claus{
      
   grid-area: menuBar;
   background-color: getColorsBase('primary', 3);   
   text-align: center;
   padding: 1rem;

    .menu{
        width: 100%;        
        @include setFlex(column, space-evenly, space-around);
       align-items: flex-start;        

        .menu-opt{
            padding: $unit/4;          
            width: 95%;              

            .menu-link{
                display: inline-block;                
                font-size: 1.75rem;
                width: 95%;
                text-align: left;              
            }

            .Subclaus {
                width: 100%;
                @include setFlex(row, space-evenly);

                li{
                    a{
                        font-size: 2rem;
                    }
                }
            }


        }

    }
    
}

i{
    margin-inline: 1.5rem;
    padding: 1rem;
    color: rgb(247, 247, 247);
    border-radius: 15%;    
    box-shadow: 1px 1px 5px 0px pink;
    transition: all 500ms ease-in-out;
    

    &:hover{
        color: rgb(5, 128, 211);
    }
}

.btn{

    transition: all 500ms ease-in-out;
    padding: 0.5rem;
    border-radius: 5px;
    margin-inline: 1.5rem;
    font-size: 1.5rem;

    @each $nombre, $color in $palleta {
        &-#{$nombre}{
            border: 1px solid darken($color, 3);
            color: darken($color, 3);           
            box-shadow: 2px 2px 5px 0px lighten($color, 30);

            &:hover{
                background-color: darken($color, 5);
                color: getColorsBase('secondary', 1);
            }
        }
    }
}

.tit{
    font-size: 3rem;    
    text-transform: capitalize;
    font-family:  art-history-book;

    $tts: map-keys($map: $fontSettings);
    $cant: length($list: $tts);

    $c:1;
    @while ( $c <= $cant ) {
  
        $keyName:nth($tts, $c);
        $fontVals: getValueOfMap($fontSettings, $keyName);
       
        &-#{$keyName}{         
            @extend %tituloBase;
            margin: 0.5rem;
            font-size: $unit * nth($fontVals,3);
            font-weight: nth($fontVals, 1);
            font-stretch:nth($fontVals, 2);            
        }       

        $c: $c + 1;
    } 

    
    @each $label, $color in $palleta{

        &-#{$label}{
            display: inline-block;
            width: fit-content;
            padding: 5px;
            color: $color;
            border: 2px solid darken($color, 5);
            transition: all 750ms ease-in-out;

             &:hover{
                 background-color: darken($color, 5);
                 color: getColorsBase('secondary', 1);
                 border-radius:3px;                                               
             }
        }
    }

}